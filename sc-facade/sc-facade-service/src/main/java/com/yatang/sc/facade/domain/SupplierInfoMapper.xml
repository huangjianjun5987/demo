<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yatang.sc.facade.dao.SupplierInfoDao">
	<resultMap id="BaseResultMap" type="com.yatang.sc.facade.domain.SupplierInfoPo">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="basic_id" property="basicId" jdbcType="INTEGER" />
		<result column="operat_taxat_id" property="operatTaxatId" jdbcType="INTEGER" />
		<result column="bank_id" property="bankId" jdbcType="INTEGER" />
		<result column="license_id" property="licenseId" jdbcType="INTEGER" />
		<result column="sr_id" property="saleRegionId" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="failed_reason" property="failedReason" jdbcType="VARCHAR" />
		<result column="audit_user_id" property="auditUserId" jdbcType="VARCHAR" />
		<result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="modify_user" property="modifyUser" jdbcType="VARCHAR" />
		<association property="supplierBasicInfo"
			javaType="com.yatang.sc.facade.domain.SupplierBasicInfoPo" column="basic_id"
			select="com.yatang.sc.facade.dao.SupplierBasicInfoDao.queryById" />
		<association property="supplierOperTaxInfo"
			javaType="com.yatang.sc.facade.domain.SupplierOperTaxInfoPo" column="operat_taxat_id"
			select="com.yatang.sc.facade.dao.SupplierOperTaxInfoDao.queryById" />
		<association property="supplierBankInfo"
			javaType="com.yatang.sc.facade.domain.SupplierBankInfoPo" column="bank_id"
			select="com.yatang.sc.facade.dao.SupplierBankInfoDao.queryById" />
		<association property="supplierlicenseInfo"
			javaType="com.yatang.sc.facade.domain.SupplierlicenseInfoPo" column="license_id"
			select="com.yatang.sc.facade.dao.SupplierlicenseInfoDao.queryById" />
		<association property="saleRegionInfo"
			javaType="com.yatang.sc.facade.domain.SupplierSaleRegionPo" column="sr_id"
			select="com.yatang.sc.facade.dao.SupplierSaleRegionDao.selectByPrimaryKey" />
	</resultMap>

	<sql id="Base_Column_List">
		id, basic_id, operat_taxat_id, bank_id,license_id,
		sr_id,audit_user_id,audit_time,create_time,modify_time,create_user,modify_user,
		status,failed_reason
	</sql>

	<sql id="Base_Column_List_alias">
		si.id, si.basic_id, si.operat_taxat_id, si.bank_id,
		si.license_id,si.status,si.failed_reason
	</sql>

	<select id="queryById" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM supplier_info
		WHERE id = #{id,jdbcType=VARCHAR}
	</select>
	<!--根据供应商ID查询审核失败原因 -->
	<select id="findAuditFailedReason" parameterType="java.lang.String"
		resultType="auditFailedReasonPo">
		SELECT su.user_name auditUser,si.audit_time
		auditTime,si.failed_reason failedReason
		FROM supplier_info si LEFT JOIN
		sys_user su ON si.audit_user_id=su.id WHERE si.id =
		#{id,jdbcType=VARCHAR}
	</select>

	<!--供应商简约信息 -->
	<resultMap id="BasicResultMap" type="com.yatang.sc.facade.domain.SupplierBasicPo">
		<id column="id" property="providerId" jdbcType="VARCHAR" />
		<result column="provider_name" property="providerName"
			jdbcType="VARCHAR" />
	</resultMap>

	<!-- 查询入驻修改列表及管理列表 -->
	<select id="listByParamSortSettledTime" parameterType="MultiQuerySupplierPo"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List_alias" />
		FROM supplier_info si
		LEFT JOIN sp_basic_info sbi ON si.basic_id = sbi.id
		LEFT JOIN sp_settled_cont_info ssc ON si.settled_cont_id = ssc.id
		LEFT JOIN sp_cooperation_info sci ON si.cooperation_id = sci.id
		<where>
			1=1
			<if test="type == 1">
				AND si.status IN (2,3,4,6)
			</if>
			<if test="type == 0">
				AND si.status = 5
			</if>
			<if test="companyName != null">


				AND sbi.company_name LIKE
				CONCAT('%',(#{companyName,jdbcType=VARCHAR}),'%')
			</if>
			<if test="spNo != null"> AND sbi.sp_no = #{spNo,jdbcType=VARCHAR}</if>
			<if test="spRegNo != null"> AND sp_reg_no = #{spRegNo,jdbcType=VARCHAR}</if>
			<if test="status != null "> AND si.status = #{status,jdbcType=INTEGER} </if>
			<if test="name != null "> AND ssc.name = #{name,jdbcType=VARCHAR} </if>
			<if test="phone != null "> AND ssc.phone = #{phone,jdbcType=VARCHAR} </if>
			<if test="settlementAccountType != null">
				AND sci.settlement_account_type =
				#{settlementAccountType,jdbcType=INTEGER}
			</if>
			<if test="minSettledDate != null and maxSettledDate != null">
				AND date_format(sci.settled_date,'%Y-%m-%d')
				BETWEEN
				date_format(#{minSettledDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
				AND
				date_format(#{maxSettledDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			</if>
			<if test="minSettledDate != null and maxSettledDate == null">
				AND <![CDATA[ date_format(sci.settled_date,'%Y-%m-%d') >= date_format(#{minSettledDate,jdbcType=TIMESTAMP},'%Y-%m-%d') ]]>
			</if>
			<if test="minSettledDate == null and maxSettledDate != null">
				AND <![CDATA[ date_format(sci.settled_date,'%Y-%m-%d') <= date_format(#{maxSettledDate,jdbcType=TIMESTAMP},'%Y-%m-%d') ]]>
			</if>
			<if test="minSettlementPeriod != null and maxSettlementPeriod != null">
				AND sci.settlement_period BETWEEN
				#{minSettlementPeriod,jdbcType=INTEGER}
				AND
				#{maxSettlementPeriod,jdbcType=INTEGER}
			</if>
			<if test="minSettlementPeriod != null and maxSettlementPeriod == null">
				AND <![CDATA[ sci.settlement_period >= #{minSettlementPeriod,jdbcType=INTEGER} ]]>
			</if>
			<if test="minSettlementPeriod == null and maxSettlementPeriod != null">
				AND <![CDATA[ sci.settlement_period <= #{maxSettlementPeriod,jdbcType=INTEGER} ]]>
			</if>
			<if test="minRebateRate != null and maxRebateRate != null">
				AND sci.rebate_rate BETWEEN
				#{minRebateRate,jdbcType=DECIMAL}
				AND
				#{maxRebateRate,jdbcType=DECIMAL}
			</if>
			<if test="minRebateRate != null and maxRebateRate == null">
				AND <![CDATA[ sci.rebate_rate >= #{minRebateRate,jdbcType=DECIMAL} ]]>
			</if>
			<if test="minRebateRate == null and maxRebateRate != null">
				AND <![CDATA[ sci.rebate_rate <= #{maxRebateRate,jdbcType=DECIMAL} ]]>
			</if>
		</where>
		ORDER BY settled_time DESC
	</select>

	<!-- 查询入驻申请列表 -->
	<select id="listByParamSortSettledRequestTime" parameterType="supplierEnterQueryParamPo"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List_alias" />
		from supplier_info si
		LEFT JOIN sp_basic_info sbi on si.basic_id = sbi.id
		LEFT JOIN sp_settled_cont_info ssc on si.settled_cont_id = ssc.id
		LEFT JOIN sp_cooperation_info sci on si.cooperation_id = sci.id
		<where>
			1=1 AND si.status IN(0,1)
			<if test="companyName != null"> and sbi.company_name like
				CONCAT('%',(#{companyName}),'%') </if>
			<if test="spRegNo != null"> and sbi.sp_reg_no = #{spRegNo}</if>
			<if test="spNo != null"> and sbi.sp_no = #{spNo}</if>
			<if test="name != null "> and ssc.name = #{name} </if>
			<if test="phone != null "> and ssc.phone = #{phone,jdbcType=VARCHAR} </if>
			<if test="status != null "> and si.status = #{status} </if>
			<if test="minSettledRequestTime != null and maxSettledRequestTime != null"> and date_format(si.settled_request_time,'%Y-%m-%d')
				BETWEEN
				date_format(#{minSettledRequestTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
				AND
				date_format(#{maxSettledRequestTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
			</if>
			<if test="minSettledRequestTime != null and maxSettledRequestTime == null">
				and <![CDATA[ date_format(si.settled_request_time,'%Y-%m-%d') >= date_format(#{minSettledRequestTime,jdbcType=TIMESTAMP},'%Y-%m-%d') ]]>
			</if>
			<if test="minSettledRequestTime == null and maxSettledRequestTime != null">
				and <![CDATA[ date_format(si.settled_request_time,'%Y-%m-%d') <= date_format(#{maxSettledRequestTime,jdbcType=TIMESTAMP},'%Y-%m-%d') ]]>
			</if>
		</where>
		order by si.settled_request_time DESC
	</select>

	<!-- 供应商列表 start -->
	<resultMap id="ListResultMap" type="com.yatang.sc.facade.domain.SupplierInfoQueryListPo">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="providerNo" property="providerNo" jdbcType="VARCHAR" />
		<result column="providerName" property="providerName" jdbcType="VARCHAR" />
		<result column="registLicenceNumber" property="registLicenceNumber" jdbcType="VARCHAR" />
		<result column="providerType" property="providerType" jdbcType="INTEGER" />
		<result column="grade" property="grade" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="spStatus" property="spStatus" jdbcType="INTEGER" />
		<result column="failedReason" property="failedReason" jdbcType="VARCHAR" />
		<result column="settledDate" property="settledDate" jdbcType="VARCHAR" />
		<result column="auditType" property="auditType" jdbcType="INTEGER" />
		<result column="basicInfoId" property="basicInfoId" jdbcType="INTEGER" />
		<result column="licenseInfoId" property="licenseInfoId" jdbcType="INTEGER" />
		<result column="spNo" property="spNo" jdbcType="VARCHAR" />
		<result column="companyName" property="companyName" jdbcType="VARCHAR" />
		<result column="orgId" property="orgId" jdbcType="VARCHAR" />
		<result column="adrGrade" property="adrGrade" jdbcType="INTEGER" />
	</resultMap>
	<select id="listByParam" parameterType="com.yatang.sc.facade.domain.SupplierInfoQueryParamPo" resultMap="ListResultMap">
		SELECT * FROM (
		SELECT
		si.id,
		sbi.sp_no providerNo,sbi.company_name providerName,
		sli.regist_licence_number registLicenceNumber,
		1 providerType,
		sbi.grade,si.status,si.status spStatus,si.failed_reason failedReason,DATE_FORMAT(sbi.settled_time,'%Y-%m-%d') settledDate,IF(ISNULL(si.audit_time),1,2) auditType,
		sbi.id basicInfoId,sli.id licenseInfoId, null orgId
		FROM supplier_info si
		LEFT JOIN sp_basic_info sbi on si.basic_id = sbi.id
		LEFT JOIN sp_license_info sli on si.license_id = sli.id
		UNION ALL
		SELECT
		sai.id,
		sbi.provider_no providerNo,sbi.provider_name providerName,
		(SELECT sli.regist_licence_number FROM supplier_info si
		LEFT JOIN sp_license_info sli on si.license_id = sli.id WHERE si.id=sai.parent_id) registLicenceNumber,
		2 providerType,
		sbi.grade,sai.status,
		(SELECT status FROM supplier_info WHERE id=sai.parent_id) spStatus,
		sai.failed_reason failedReason,
		(SELECT DATE_FORMAT(settled_time,'%Y-%m-%d') settledDate FROM supplier_info si
		LEFT JOIN sp_basic_info sbi on si.basic_id = sbi.id WHERE si.id=sai.parent_id) settledDate,
		IF(ISNULL(sai.audit_time),1,2) auditType,
		sbi.id basicInfoId,(SELECT si.license_id FROM supplier_info si WHERE si.id=sai.parent_id) licenseInfoId,
		sbi.org_id orgId
		FROM supplier_adr_info sai
		LEFT JOIN sp_adr_basic_info sbi on sai.basic_id = sbi.id
		) temp
		<where>
			1=1
			<if test="statuses != null ">
				AND status IN
				<foreach item="item" index="index" collection="statuses" open="(" separator="," close=")">#{item}</foreach>
			</if>
			<if test="providerNo != null and providerNo != ''"> AND providerNo LIKE CONCAT('%',(#{providerNo}),'%') </if>
			<if test="providerName != null and providerName != ''"> AND providerName LIKE CONCAT('%',(#{providerName}),'%') </if>
			<if test="registLicenceNumber != null and registLicenceNumber != ''"> AND registLicenceNumber LIKE CONCAT('%',(#{registLicenceNumber}),'%') </if>
			<if test="providerType != null "> AND providerType = #{providerType} </if>
			<if test="grade != null "> AND grade = #{grade} </if>
			<if test="status != null "> AND status = #{status} </if>
			<if test="settledDate != null"> AND settledDate = DATE_FORMAT(#{settledDate,jdbcType=TIMESTAMP},'%Y-%m-%d') </if>
			<if test="orgId != null "> AND orgId = #{orgId} </if>
		</where>
		ORDER BY registLicenceNumber DESC,providerType ASC
	</select>

	<select id="queryExportManageList" parameterType="com.yatang.sc.facade.domain.SupplierInfoQueryParamPo" resultMap="ListResultMap">
		SELECT si.spNo, si.companyName, si.providerNo, si.providerName, sli.regist_licence_number registLicenceNumber,
		si.orgId, si.license_id licenseInfoId, si.grade, si.adrGrade, si.settledDate, si.spStatus, si.status
		FROM
		(
		SELECT * FROM
		(
		SELECT sbi.sp_no spNo, sbi.company_name companyName,sbi.grade grade,sbi.settled_time settledDate,si.status spStatus,si.id,si.license_id FROM supplier_info si, sp_basic_info sbi
		WHERE sbi.id=si.basic_id
		<if test="statuses != null ">
			AND si.status IN
			<foreach item="item1" index="index" collection="statuses" open="(" separator="," close=")">#{item1}</foreach>
		</if>
		) si
		LEFT JOIN
		(
		SELECT sabi.provider_no providerNo, sabi.provider_name providerName,sabi.org_id orgId,sabi.grade adrGrade,sai.status, sai.parent_id FROM supplier_adr_info sai, sp_adr_basic_info sabi
		WHERE sai.basic_id=sabi.id
		<if test="statuses != null ">
			AND sai.status IN
			<foreach item="item2" index="index" collection="statuses" open="(" separator="," close=")">#{item2}</foreach>
		</if>
		) sai
		ON sai.parent_id=si.id
		) si LEFT JOIN sp_license_info sli
		ON si.license_id=sli.id
		<where>
			<if test="providerNo != null and providerNo != ''">
				AND (si.spNo LIKE CONCAT('%',(#{providerNo}),'%') OR si.providerNo LIKE CONCAT('%',(#{providerNo}),'%'))
			</if>
			<choose>
				<when test="providerType == null">
					<if test="status != null">
						AND (si.spStatus = #{status,jdbcType=INTEGER} OR si.status = #{status,jdbcType=INTEGER})
					</if>
				</when>
				<otherwise>
					<choose>
						<when test="providerType == 1">
							<if test="status != null">
								AND si.spStatus = #{status,jdbcType=INTEGER}
							</if>
							<if test="grade != null">
								AND si.grade = #{grade,jdbcType=INTEGER}
							</if>
						</when>
						<when test="providerType == 2">
							<if test="status != null">
								AND si.status = #{status,jdbcType=INTEGER}
							</if>
							<if test="grade != null">
								AND si.adrGrade = #{grade,jdbcType=INTEGER}
							</if>
						</when>
					</choose>
				</otherwise>
			</choose>
			<if test="providerName != null and providerName != ''">
				AND (si.companyName LIKE CONCAT('%',(#{providerName}),'%') OR si.providerName LIKE CONCAT('%',(#{providerName}),'%'))
			</if>
			<if test="registLicenceNumber != null and registLicenceNumber != ''">
				AND sli.regist_licence_number LIKE CONCAT('%',(#{registLicenceNumber}),'%')
			</if>
			<if test="settledDate != null"> AND si.settledDate = #{settledDate,jdbcType=TIMESTAMP} </if>
		</where>
		ORDER BY sli.regist_licence_number DESC
	</select>
	<!-- 供应商列表 end -->

	<!-- 查询供应商主表信息 -->
	<select id="queryMainById" parameterType="java.lang.String" resultType="com.yatang.sc.facade.domain.SupplierInfoPo" >
		SELECT
		id,basic_id AS basicId,operat_taxat_id AS operatTaxatId,bank_id AS bankId,license_id AS licenseId,sr_id AS saleRegionId,
		status,failed_reason AS failedReason,audit_user_id AS auditUserId,audit_time AS auditTime,create_time AS createTime,
		modify_time AS modifyTime,create_user AS createUser,modify_user AS modifyUser
		FROM supplier_info
		WHERE id = #{id,jdbcType=VARCHAR}
	</select>

	<!-- 查询最新记录的ID -->
	<select id="queryNewestSupplierRecordId" resultType="java.lang.String">
		SELECT id FROM supplier_info WHERE create_time = (SELECT
		MAX(create_time) FROM supplier_info);
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from supplier_info
		where id = #{id,jdbcType=VARCHAR}
	</delete>

    <insert id="insertSelective" parameterType="com.yatang.sc.facade.domain.SupplierInfoPo" useGeneratedKeys="true" keyProperty="id" >
	    insert into supplier_info
	    <trim prefix="(" suffix=")" suffixOverrides="," >
	      <if test="id != null" >
	        id,
	      </if>
	      <if test="basicId != null" >
	        basic_id,
	      </if>
	      <if test="operatTaxatId != null" >
	        operat_taxat_id,
	      </if>
	      <if test="bankId != null" >
	        bank_id,
	      </if>
	      <if test="licenseId != null" >
	        license_id,
	      </if>
	      <if test="saleRegionId != null" >
			  sr_id,
	      </if>
		  <if test="status != null" >
			  status,
		  </if>
			<if test="failedReason != null" >
				failedReason,
			</if>
			<if test="auditUserId != null" >
				audit_user_id,
			</if>
			<if test="auditTime != null" >
				audit_time,
			</if>
			<if test="createUser != null" >
				create_user,
			</if>
			<if test="modifyUser != null" >
				modify_user,
			</if>
			create_time,
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides="," >
	      <if test="id != null" >
	        #{id,jdbcType=VARCHAR},
	      </if>
	      <if test="basicId != null" >
	        #{basicId,jdbcType=INTEGER},
	      </if>
	      <if test="operatTaxatId != null" >
	        #{operatTaxatId,jdbcType=INTEGER},
	      </if>
	      <if test="bankId != null" >
	        #{bankId,jdbcType=INTEGER},
	      </if>
	      <if test="licenseId != null" >
	        #{licenseId,jdbcType=INTEGER},
	      </if>
	      <if test="saleRegionId != null" >
	        #{saleRegionId,jdbcType=INTEGER},
	      </if>
			<if test="status != null" >
				#{status,jdbcType=INTEGER},
			</if>
			<if test="failedReason != null" >
				#{failedReason,jdbcType=VARCHAR},
			</if>
			<if test="auditUserId != null" >
				#{auditUserId,jdbcType=VARCHAR},
			</if>
			<if test="auditTime != null" >
				#{auditTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null" >
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="modifyUser != null" >
				#{modifyUser,jdbcType=VARCHAR},
			</if>
			now(),
	    </trim>
    </insert>


	<update id="updateByPrimaryKeySelective" parameterType="com.yatang.sc.facade.domain.SupplierInfoPo">
		update supplier_info
		<set>
			<if test="basicId != null">
				basic_id = #{basicId,jdbcType=INTEGER},
			</if>
			<if test="operatTaxatId != null">
				operat_taxat_id = #{operatTaxatId,jdbcType=INTEGER},
			</if>
			<if test="bankId != null">
				bank_id = #{bankId,jdbcType=INTEGER},
			</if>
			<if test="licenseId != null">
				license_id = #{licenseId,jdbcType=INTEGER},
			</if>
			<if test="saleRegionId != null" >
				sr_id = #{saleRegionId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="failedReason != null">
				failed_reason = #{failedReason,jdbcType=VARCHAR},
			</if>
			<if test="auditUserId != null">
				audit_user_id = #{auditUserId,jdbcType=VARCHAR},
			</if>
			<if test="auditTime != null">
				audit_time = #{auditTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null" >
				create_user = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="modifyUser != null" >
				modify_user = #{modifyUser,jdbcType=VARCHAR},
			</if>

		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.yatang.sc.facade.domain.SupplierInfoPo">
		update supplier_info
		set basic_id = #{basicId,jdbcType=INTEGER},
		operat_taxat_id = #{operatTaxatId,jdbcType=INTEGER},
		bank_id = #{bankId,jdbcType=INTEGER},
		license_id = #{licenseId,jdbcType=INTEGER},
		sr_id = #{saleRegionId,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		failed_reason = #{failedReason,jdbcType=VARCHAR},
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<!--查询所有的正常供应商2为正常 -->
	<select id="queryAllSupplier" resultMap="BasicResultMap">
		SELECT
		main.id AS providerId,
		company_name as provider_name
		FROM supplier_info main LEFT JOIN sp_basic_info basic ON main.basic_id =
		basic.id
		WHERE main.status = 2;
	</select>

	<!--通过供应商基本信息更新审核状态为0 -->
	<update id="updateStatusById">
		update supplier_info SET status = #{status,jdbcType=INTEGER} where basic_id
		= #{basicId,jdbcType=INTEGER}
	</update>


	<select id="queryBySpNo" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		si.id, basic_id
		FROM supplier_info si
		LEFT JOIN sp_basic_info sbi
		ON si.basic_id=sbi.id
		WHERE sp_no = #{spNo,jdbcType=VARCHAR}
		ORDER BY sbi.id DESC LIMIT 1
	</select>
</mapper>
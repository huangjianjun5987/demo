<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yatang.sc.facade.dao.ProdSellInfoEventsDao" >
  <resultMap id="BaseResultMap" type="com.yatang.sc.facade.domain.ProdSellInfoEventsPo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="price_id" property="priceId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yatang.sc.facade.domain.ProdSellInfoEventsPo" extends="BaseResultMap" >
    <result column="serialized_payload" property="serializedPayload" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, price_id, create_time, create_user_id
  </sql>
  <sql id="Blob_Column_List" >
    serialized_payload
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from prod_sell_info_events
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from prod_sell_info_events
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <!--根据在用主表id删除数据-->
  <delete id="deleteByPriceId" parameterType="java.lang.Long" >
    delete from prod_sell_info_events
    where price_id = #{priceId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yatang.sc.facade.domain.ProdSellInfoEventsPo" >
    insert into prod_sell_info_events (id, price_id, create_time, 
      create_user_id, serialized_payload)
    values (#{id,jdbcType=BIGINT}, #{priceId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=VARCHAR}, #{serializedPayload,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yatang.sc.facade.domain.ProdSellInfoEventsPo" >
    insert into prod_sell_info_events
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="priceId != null" >
        price_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="serializedPayload != null" >
        serialized_payload,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="priceId != null" >
        #{priceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="serializedPayload != null" >
        #{serializedPayload,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yatang.sc.facade.domain.ProdSellInfoEventsPo" >
    update prod_sell_info_events
    <set >
      <if test="priceId != null" >
        price_id = #{priceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="serializedPayload != null" >
        serialized_payload = #{serializedPayload,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yatang.sc.facade.domain.ProdSellInfoEventsPo" >
    update prod_sell_info_events
    set price_id = #{priceId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      serialized_payload = #{serializedPayload,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yatang.sc.facade.domain.ProdSellInfoEventsPo" >
    update prod_sell_info_events
    set price_id = #{priceId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="queryByPriceId" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from prod_sell_info_events
    WHERE price_id = #{priceId,jdbcType=BIGINT}
    ORDER BY create_time DESC
    limit 0,1
  </select>

</mapper>
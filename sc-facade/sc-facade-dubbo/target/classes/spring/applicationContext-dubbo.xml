<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 注解扫描器 -->
    <context:component-scan base-package="com.yatang.sc.facade"/>
    <import resource="classpath*:config/spring/applicationContext.xml"/>
    <context:property-placeholder location="classpath:rocketmq-consumer.properties" ignore-unresolvable="true"/>
    <!--上传的地址 -->
    <context:property-placeholder
            ignore-unresolvable="true" location="classpath:imageserver.properties"/>
    <context:property-placeholder
            ignore-unresolvable="true" location="classpath:config.properties"/>


    <!-- quartz配置start -->

    <bean name="serviceScheduler"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
        <property name="configLocation" value="classpath:quartz.properties"/>
        <property name="triggers">
            <list>
                <ref bean="timeoutClosePurchaseTrigger"/>
            </list>
        </property>
    </bean>
    <!-- 定时关闭过期采购单 -->
    <bean id="timeoutClosePurchaseTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="timeoutClosePurchaseQuartsJobBean"/>
        <property name="cronExpression" value="${quartz.config.timeoutClosePurchaseTrigger.scheduler}"/>
        <property name="misfireInstruction" value="2"></property>
    </bean>

    <bean id="timeoutClosePurchaseQuartsJobBean"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass"
                  value="com.yatang.sc.facade.scheduler.TimeoutClosePurchaseScheduler">
        </property>
        <property name="jobDataAsMap">
            <map>
                <entry key="timeout">
                    <value>${quartz.config.timeoutTime.day}</value>
                </entry>
            </map>
        </property>
        <property name="durability" value="true"/>
        <property name="requestsRecovery" value="true"/>
    </bean>
    <!-- 配置mq消费者采购订单管理 -->
    <bean id="orderMQMsgConsumer" class="com.busi.mq.comsumer.MQPushConsumerService"
          init-method="init" destroy-method="destroy">
        <property name="namesrvAddr" value="${rocketmq.nameserver.address}"/>
        <property name="consumerGroup" value="${rocketmq.purchaseMsg.consumergroup}"/>
        <property name="msgTopic" value="${rocketmq.purchaseMsg.topic}"/>
        <property name="msgTag" value="${rocketmq.purchaseMsg.tag}"/>

        <property name="msgProcessors">
            <list>
                <ref bean="purchaseMsgProcessor"/>
            </list>
        </property>
    </bean>
    <bean id="purchaseRefundMQMsgConsumer" class="com.busi.mq.comsumer.MQPushConsumerService"
          init-method="init" destroy-method="destroy">
        <property name="namesrvAddr" value="${rocketmq.purchaseRefundMsg.nameserver.address}"/>
        <property name="consumerGroup" value="${rocketmq.purchaseRefundMsg.consumergroup}"/>
        <property name="msgTopic" value="${rocketmq.purchaseRefundMsg.topic}"/>
        <property name="msgTag" value="${rocketmq.purchaseRefundMsg.tag}"/>

        <property name="msgProcessors">
            <list>
                <ref bean="purchaseRefundProcessor"/>
            </list>
        </property>
    </bean>
    <bean id="purchaseOrderMQMsgConsumer" class="com.busi.mq.comsumer.MQPushConsumerService"
          init-method="init" destroy-method="destroy">
        <property name="namesrvAddr" value="${rocketmq.nameserver.address}"/>
        <property name="consumerGroup" value="${rocketmq.purchaseOrder.consumergroup}"/>
        <property name="msgTopic" value="${rocketmq.purchaseOrder.topic}"/>
        <property name="msgTag" value="${rocketmq.purchaseOrder.tag}"/>

        <property name="msgProcessors">
            <list>
                <ref bean="purchaseOrderProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="purchaseOrderMQProducer" class="com.busi.mq.producer.SimpleMQProducer" init-method="init"
          destroy-method="destroy">
        <property name="namesrvAddr" value="${rocketmq.nameserver.address}"/>
        <property name="producerGroup" value="${rocketmq.purchaseOrder.producergroup}"/>
        <property name="encoder" ref="purchaseOrderMQEncoder"/>
    </bean>
    <bean id="purchaseOrderMQEncoder" class="com.busi.mq.message.encoder.JSONStringEncoder">
        <property name="msgTopic" value="${rocketmq.purchaseOrder.topic}"/>
        <property name="msgTag" value="${rocketmq.purchaseOrder.tag}"/>
    </bean>

    <!-- 商品同步 -->
    <bean id="PurchaseMsgProcessor123" class="com.busi.mq.comsumer.MQPushConsumerService"
          init-method="init" destroy-method="destroy">
        <property name="namesrvAddr" value="${rocketmq.product.nameserver.address}"/>
        <property name="consumerGroup" value="${rocketmq.product.consumergroup}"/>
        <property name="msgTopic" value="${rocketmq.product.topic}"/>
        <property name="msgTag" value="${rocketmq.product.tag}"/>

        <property name="msgProcessors">
            <list>
                <ref bean="productMqCustomerProcessor"/>
            </list>
        </property>
    </bean>
    <!--采购退货MQ-->
    <bean id="purcharseRefundMQProducer" class="com.busi.mq.producer.SimpleMQProducer" init-method="init"
          destroy-method="destroy">
        <property name="namesrvAddr" value="${rocketmq.purchaseRefundMsg.nameserver.address}"/>
        <property name="producerGroup" value="${rocketmq.purchaseRefundMsg.producergroup}"/>
        <property name="encoder" ref="purchaseRefundMQEncoder"/>
    </bean>
    <bean id="purchaseRefundMQEncoder" class="com.busi.mq.message.encoder.JSONStringEncoder">
        <property name="msgTopic" value="${rocketmq.purchaseRefundMsg.topic}"/>
        <property name="msgTag" value="${rocketmq.purchaseRefundMsg.tag}"/>
    </bean>

    <!--采购订单及退货单结算MQ-->
    <bean id="purcharseSettlementMQProducer" class="com.busi.mq.producer.SimpleMQProducer" init-method="init"
          destroy-method="destroy">
        <property name="namesrvAddr" value="${rocketmq.purchaseSettlementMsg.nameserver.address}"/>
        <property name="producerGroup" value="${rocketmq.purchaseSettlementMsg.producergroup}"/>
        <property name="encoder" ref="purchaseSettlementMQEncoder"/>
    </bean>
    <bean id="purchaseSettlementMQEncoder" class="com.busi.mq.message.encoder.JSONStringEncoder">
        <property name="msgTopic" value="${rocketmq.purchaseSettlementMsg.topic}"/>
        <property name="msgTag" value="${rocketmq.purchaseSettlementMsg.tag}"/>
    </bean>
    

    <bean id="redisDistributedLockFactory" class="com.yatang.sc.common.lock.RedisDistributedLockFactory"
          init-method="initFactory">
        <property name="lockRedisServer" value="${lock.redis.server}"/>
    </bean>

    <bean id="xxlJobExecutor" class="com.xxl.job.core.executor.XxlJobExecutor" init-method="start"
          destroy-method="destroy">
        <!-- 执行器IP[选填]，为空则自动获取 -->
        <property name="ip" value="${xxl.job.executor.ip}"/>
        <!-- 执行器端口号[必须] -->
        <property name="port" value="${xxl.job.executor.port}"/>
        <!-- 执行器AppName[选填]，为空则关闭自动注册 -->
        <property name="appName" value="${xxl.job.executor.appname}"/>
        <!-- 执行器注册中心地址[选填]，为空则关闭自动注册 -->
        <property name="adminAddresses" value="${xxl.job.admin.addresses}"/>
        <!-- 执行器日志路径[必填] -->
        <property name="logPath" value="${xxl.job.executor.logpath}"/>
        <!-- 访问令牌，非空则进行匹配校验[选填] -->
        <property name="accessToken" value="${xxl.job.accessToken}"/>
    </bean>
</beans>
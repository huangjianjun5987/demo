<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yatang.sc.order.dao.ReturnRequestItemDao">
    <resultMap id="BaseResultMap" type="com.yatang.sc.order.domain.returned.ReturnRequestItemPo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="return_id" property="returnId" jdbcType="VARCHAR"/>
        <result column="catalog_id" property="catalogId" jdbcType="VARCHAR"/>
        <result column="quantity" property="quantity" jdbcType="BIGINT"/>
        <result column="state" property="state" jdbcType="SMALLINT"/>
        <result column="state_detail" property="stateDetail" jdbcType="VARCHAR"/>
        <result column="item_price_info" property="itemPriceInfo" jdbcType="BIGINT"/>
        <result column="shipped_quantity" property="shippedQuantity" jdbcType="BIGINT"/>
        <result column="completed_quantity" property="completedQuantity" jdbcType="BIGINT"/>
        <result column="return_quantity" property="returnQuantity" jdbcType="BIGINT"/>
        <result column="product_code" property="productCode" jdbcType="VARCHAR"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="product_id" property="productId" jdbcType="VARCHAR"/>
        <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP"/>
        <result column="sale_quantity" property="saleQuantity" jdbcType="BIGINT"/>
        <result column="unit_quantity" property="unitQuantity" jdbcType="INTEGER"/>
        <result column="actual_return_quantity" property="actualReturnQuantity" jdbcType="BIGINT"/>
        <result column="raw_total_price" property="rawTotalPrice" jdbcType="DOUBLE" />
        <result column="actual_raw_total_price" property="actualRawTotalPrice" jdbcType="DOUBLE" />
    </resultMap>
    <sql id="Base_Column_List">
    id, return_id, catalog_id, quantity, state, state_detail, item_price_info, shipped_quantity, completed_quantity,actual_return_quantity,
    return_quantity, product_code,product_name, product_id, creation_time, sale_quantity, unit_quantity,raw_total_price,actual_raw_total_price
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from scp_return_request_item
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from scp_return_request_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.yatang.sc.order.domain.returned.ReturnRequestItemPo">
    insert into scp_return_request_item (id, return_id, catalog_id, 
      quantity, state, state_detail, item_price_info, shipped_quantity,
      completed_quantity, return_quantity, product_code, 
      product_id, creation_time,
      sale_quantity, unit_quantity)
    values (#{id,jdbcType=BIGINT}, #{returnId,jdbcType=VARCHAR}, #{catalogId,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=BIGINT}, #{state,jdbcType=SMALLINT}, #{stateDetail,jdbcType=VARCHAR}, #{itemPriceInfo,jdbcType=BIGINT}, #{shippedQuantity,jdbcType=BIGINT},
      #{completedQuantity,jdbcType=BIGINT}, #{returnQuantity,jdbcType=BIGINT}, #{productCode,jdbcType=VARCHAR}, 
      #{productId,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}, #{avCost,jdbcType=DOUBLE}, 
      #{saleQuantity,jdbcType=BIGINT}, #{unitQuantity,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.yatang.sc.order.domain.returned.ReturnRequestItemPo">
        insert into scp_return_request_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="returnId != null">
                return_id,
            </if>
            <if test="catalogId != null">
                catalog_id,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="stateDetail != null">
                state_detail,
            </if>
            <if test="itemPriceInfo != null">
                item_price_info,
            </if>
            <if test="shippedQuantity != null">
                shipped_quantity,
            </if>
            <if test="completedQuantity != null">
                completed_quantity,
            </if>
            <if test="returnQuantity != null">
                return_quantity,
            </if>
            <if test="productCode != null">
                product_code,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="creationTime != null">
                creation_time,
            </if>
            <if test="saleQuantity != null">
                sale_quantity,
            </if>
            <if test="unitQuantity != null">
                unit_quantity,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="returnId != null">
                #{returnId,jdbcType=VARCHAR},
            </if>
            <if test="catalogId != null">
                #{catalogId,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=BIGINT},
            </if>
            <if test="state != null">
                #{state,jdbcType=SMALLINT},
            </if>
            <if test="stateDetail != null">
                #{stateDetail,jdbcType=VARCHAR},
            </if>
            <if test="itemPriceInfo != null">
                #{itemPriceInfo,jdbcType=BIGINT},
            </if>
            <if test="shippedQuantity != null">
                #{shippedQuantity,jdbcType=BIGINT},
            </if>
            <if test="completedQuantity != null">
                #{completedQuantity,jdbcType=BIGINT},
            </if>
            <if test="returnQuantity != null">
                #{returnQuantity,jdbcType=BIGINT},
            </if>
            <if test="productCode != null">
                #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=VARCHAR},
            </if>
            <if test="creationTime != null">
                #{creationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="avCost != null">
                #{avCost,jdbcType=DOUBLE},
            </if>
            <if test="saleQuantity != null">
                #{saleQuantity,jdbcType=BIGINT},
            </if>
            <if test="unitQuantity != null">
                #{unitQuantity,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yatang.sc.order.domain.returned.ReturnRequestItemPo">
        update scp_return_request_item
        <set>
            <if test="returnId != null">
                return_id = #{returnId,jdbcType=VARCHAR},
            </if>
            <if test="catalogId != null">
                catalog_id = #{catalogId,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=BIGINT},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=SMALLINT},
            </if>
            <if test="stateDetail != null">
                state_detail = #{stateDetail,jdbcType=VARCHAR},
            </if>
            <if test="itemPriceInfo != null">
                item_price_info = #{itemPriceInfo,jdbcType=BIGINT},
            </if>
            <if test="shippedQuantity != null">
                shipped_quantity = #{shippedQuantity,jdbcType=BIGINT},
            </if>
            <if test="completedQuantity != null">
                completed_quantity = #{completedQuantity,jdbcType=BIGINT},
            </if>
            <if test="returnQuantity != null">
                return_quantity = #{returnQuantity,jdbcType=BIGINT},
            </if>
            <if test="productCode != null">
                product_code = #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=VARCHAR},
            </if>
            <if test="creationTime != null">
                creation_time = #{creationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="saleQuantity != null">
                sale_quantity = #{saleQuantity,jdbcType=BIGINT},
            </if>
            <if test="unitQuantity != null">
                unit_quantity = #{unitQuantity,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yatang.sc.order.domain.returned.ReturnRequestItemPo">
    update scp_return_request_item
    set return_id = #{returnId,jdbcType=VARCHAR},
      catalog_id = #{catalogId,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=BIGINT},
      state = #{state,jdbcType=SMALLINT},
      state_detail = #{stateDetail,jdbcType=VARCHAR},
      item_price_info = #{itemPriceInfo,jdbcType=BIGINT},
      shipped_quantity = #{shippedQuantity,jdbcType=BIGINT},
      completed_quantity = #{completedQuantity,jdbcType=BIGINT},
      return_quantity = #{returnQuantity,jdbcType=BIGINT},
      product_code = #{productCode,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      sale_quantity = #{saleQuantity,jdbcType=BIGINT},
      unit_quantity = #{unitQuantity,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="queryReturnRequestItem" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from scp_return_request_item
        where return_id = #{returnId,jdbcType=VARCHAR}
    </select>


    <!--批量插入商品-->
    <insert id="batchInsertRequestItems" parameterType="java.util.List">
        insert into scp_return_request_item (id, return_id, catalog_id,
        quantity, item_price_info, shipped_quantity,
        completed_quantity, return_quantity, product_code,product_name,
        product_id, creation_time,
        sale_quantity, unit_quantity,raw_total_price,actual_raw_total_price)
        values
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.returnId,jdbcType=VARCHAR}, #{item.catalogId,jdbcType=VARCHAR},
            #{item.quantity,jdbcType=BIGINT}, #{item.itemPriceInfo,jdbcType=BIGINT},
            #{item.shippedQuantity,jdbcType=BIGINT},
            #{item.completedQuantity,jdbcType=BIGINT}, #{item.returnQuantity,jdbcType=BIGINT},
            #{item.productCode,jdbcType=VARCHAR},
            #{item.productName,jdbcType=VARCHAR},
            #{item.productId,jdbcType=VARCHAR}, #{item.creationTime,jdbcType=TIMESTAMP},
            #{item.saleQuantity,jdbcType=BIGINT}, #{item.unitQuantity,jdbcType=INTEGER},
            #{item.rawTotalPrice,jdbcType=DOUBLE},#{item.actualRawTotalPrice,jdbcType=DOUBLE})
        </foreach>
    </insert>

    <update id="batchUpdateRequestItems" parameterType="java.util.List">
        <foreach collection="list" item="item" open="" separator=";" close="">
            update scp_return_request_item
            <set>
                <if test="item.quantity != null">
                    quantity = #{item.quantity,jdbcType=BIGINT},
                </if>
                <if test="item.state != null">
                    state = #{item.state,jdbcType=SMALLINT},
                </if>
                <if test="item.stateDetail != null">
                    state_detail = #{item.stateDetail,jdbcType=VARCHAR},
                </if>
                <if test="item.actualReturnQuantity != null">
                    actual_return_quantity = #{item.actualReturnQuantity,jdbcType=INTEGER},
                </if>
                <if test="item.rawTotalPrice != null">
                    raw_total_price = #{item.rawTotalPrice,jdbcType=DOUBLE},
                </if>
                <if test="item.actualRawTotalPrice != null">
                    actual_raw_total_price = #{item.actualRawTotalPrice,jdbcType=DOUBLE}
                </if>
            </set>
            where id = #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <resultMap id="queryReturnRequestItemsByReturnIdResultMap"
               type="com.yatang.sc.order.domain.returned.AppQueryReturnRequestItemPo">
        <result column="product_id" jdbcType="VARCHAR" property="product_id"/>
        <result column="return_quantity" jdbcType="BIGINT" property="num"/>
        <result column="sale_price" jdbcType="DOUBLE" property="price"/>
        <result column="raw_total_price" jdbcType="DOUBLE" property="rawTotalPrice"/>
        <result column="unit_quantity" jdbcType="INTEGER" property="unitQuantity"/>
        <result column="quantity" jdbcType="INTEGER" property="quantity"/>
    </resultMap>

    <select id="queryReturnRequestItemByReturnId" parameterType="java.lang.String"
            resultMap="queryReturnRequestItemsByReturnIdResultMap">
    SELECT
    rri.product_id,
    rri.return_quantity,
    rri.unit_quantity,
    rri.quantity,
    ip.sale_price,
    rri.raw_total_price
    FROM
    scp_return_request_item rri
    LEFT JOIN
    scp_item_price ip
    ON rri.item_price_info = ip.id
    WHERE rri.return_id =#{returnId,jdbcType=VARCHAR}
  </select>

    <update id="batchUpdateQuantityAndRawTotalPrice" parameterType="java.util.List">
        <foreach collection="list" item="item" open="" separator=";" close="">
            update scp_return_request_item
            <set>
                <if test="item.returnQuantity != null">
                    return_quantity = #{item.returnQuantity,jdbcType=BIGINT},
                </if>
                <if test="item.rawTotalPrice != null">
                    raw_total_price = #{item.rawTotalPrice,jdbcType=DOUBLE},
                </if>
            </set>
            where id = #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>